{"version":3,"sources":["firebase.js","App.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","PortalScreen","navigation","useState","noticias","setNoticias","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","info","data","View","style","flex","ScrollView","contentContainerStyle","width","height","backgroundColor","horizontal","val","index","ImageBackground","styles","image","source","uri","imagem","TouchableOpacity","onPress","navigate","titulo","conteudo","justifyContent","Text","fontSize","color","padding","position","top","left","flexDirection","marginBottom","Image","NoticiaScreen","route","arrConteudo","setArrConteudo","params","split","resizeMode","right","borderRadius","marginTop","marginLeft","marginRight","borderColor","borderWidth","Stack","createNativeStackNavigator","App","NavigationContainer","Navigator","Screen","name","component","StyleSheet","create"],"mappings":"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","file":"static/js/app.5f83bbd7.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDxZYnasGcJfFe9I19AeC6oRLuSlkbcEso\",\r\n    authDomain: \"app-noticias-48056.firebaseapp.com\",\r\n    projectId: \"app-noticias-48056\",\r\n    storageBucket: \"app-noticias-48056.appspot.com\",\r\n    messagingSenderId: \"50331672324\",\r\n    appId: \"1:50331672324:web:e4f4e2f87f5bc4ee18fa51\"\r\n});\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport {db};","import React,{useEffect, useState} from 'react';\nimport { View, Text, StyleSheet, ScrollView, ImageBackground, Image, TouchableOpacity } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport {db} from './firebase.js';\nimport firebase from 'firebase/compat/app';\nimport \"firebase/compat/firestore\";\n\nfunction PortalScreen({navigation}) {\n\n  const [noticias, setNoticias] = useState([]);\n\n  useEffect(()=>{\n    db.collection('noticias').orderBy('data', 'desc').onSnapshot(snapshot=>{\n      setNoticias(snapshot.docs.map(function(doc){\n        return {info:doc.data()}\n      }));\n    })\n  }, [])\n\n  return (\n    <View style={{ flex: 1, }}>\n\n      <View style={{ flex: 0.3, }}>\n        <ScrollView style={{flex:1}} contentContainerStyle={{width:'200%', height:'100%', backgroundColor:'red'}} horizontal>\n\n          {\n            noticias.map((val,index)=>{\n              if(index < 2){\n                return (\n                  <ImageBackground style={styles.image} source={{ uri: val.info.imagem }}>\n                    <TouchableOpacity onPress={()=>navigation.navigate('Noticia', \n                      {\n                      titulo: val.info.titulo, \n                      conteudo: val.info.conteudo,\n                      imagem: val.info.imagem\n                      }\n                    )} style = {{\n                      width:'100%', \n                      height:'100%', \n                      backgroundColor:'rgba(0,0,0,0.4)', \n                      justifyContent:'flex-end'\n                    }}>\n                      <Text style={{fontSize: 24, color:'white'}}>{val.info.titulo}</Text>\n                    </TouchableOpacity>\n                  </ImageBackground>\n                )\n              }\n            })\n          }\n\n        </ScrollView>\n      </View>\n\n      <View style={{flex:0.7, padding:20}}>\n\n        <View style={{\n          width:50, \n          height:2, \n          backgroundColor:'#069', \n          position:'absolute', \n          top:40, \n          left:40\n        }}></View>\n        <Text>Mais Noticias</Text>\n\n        <ScrollView contentContainerStyle={{padding:20}} style={{flex:1}}>\n        {\n          noticias.map((val,index)=>{\n            if(index >= 2){\n              return (\n                <View style={{flexDirection:'row',marginBottom:10}}>\n                  <TouchableOpacity style={{flexDirection:'row'}} onPress={()=>navigation.navigate('Noticia',{\n                    titulo: val.info.titulo,\n                    conteudo: val.info.conteudo,\n                    imagem: val.info.imagem\n                  })}>\n                    <Image source={{ uri: val.info.imagem}} style={{width:100,height:100}} />\n                    <Text style={{padding:10}}>{val.info.titulo}</Text>\n                  </TouchableOpacity>\n                </View>\n              )\n            }\n          })\n        }  \n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nfunction NoticiaScreen({route, navigation}) {\n\n  const [arrConteudo, setArrConteudo] = useState([]);\n\n  useEffect(()=>{\n    setArrConteudo(()=> route.params.conteudo.split('/$p'));\n  }, [])\n\n  return (\n    <View style={{}}>\n      <ScrollView>\n        <View style={{}}>\n          <ImageBackground resizeMode='cover' style={{width:'100%', height:150}} source={{ uri: route.params.imagem }}>\n            <View style={{\n              width:'100%', \n              height:150, \n              backgroundColor:'rgba(0,0,0,0.4)', \n            }}/>\n          </ImageBackground>\n          \n          <View style={{padding:15}}>\n            \n            <Text style={{fontSize: 24, color:'black'}}>{route.params.titulo}</Text>\n            <View style={{\n            width: 100,\n            height:2, \n            backgroundColor:'#069', \n            top:3, \n            left:6,\n            right:6\n            }}/>\n          </View>\n        </View>\n \n        <View style={{\n          borderRadius:15, \n          backgroundColor:'rgba(148, 184, 206, 0.1)', \n          marginTop:30,\n          marginBottom:10,\n          marginLeft:15,\n          marginRight:15,\n          borderColor:'rgba(22, 3, 48, 1.8)',\n          borderWidth:3,\n          padding: 20\n        }}>\n          {\n            \n            arrConteudo.map(function(val){\n              return(\n                <Text style={{fontSize:16, marginTop:10}}>{val}</Text>\n              );\n            })\n          }\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst Stack = createNativeStackNavigator();\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Portal\" component={PortalScreen} />\n        <Stack.Screen name=\"Noticia\" component={NoticiaScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  image: {\n    resizeMode: 'cover',\n    justifyContent:'flex-end',\n    width:'100%',\n    flex:1\n  },\n});\n"],"sourceRoot":""}