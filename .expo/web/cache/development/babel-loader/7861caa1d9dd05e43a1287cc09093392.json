{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { db } from \"./firebase.js\";\nimport firebase from 'firebase/compat/app';\nimport \"firebase/compat/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction PortalScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      noticias = _useState2[0],\n      setNoticias = _useState2[1];\n\n  useEffect(function () {\n    db.collection('noticias').orderBy('data', 'desc').onSnapshot(function (snapshot) {\n      setNoticias(snapshot.docs.map(function (doc) {\n        return {\n          info: doc.data()\n        };\n      }));\n    });\n  }, []);\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(View, {\n      style: {\n        flex: 0.3\n      },\n      children: _jsx(ScrollView, {\n        style: {\n          flex: 1\n        },\n        contentContainerStyle: {\n          width: '200%',\n          height: '100%',\n          backgroundColor: 'red'\n        },\n        horizontal: true,\n        children: noticias.map(function (val, index) {\n          if (index < 2) {\n            return _jsx(ImageBackground, {\n              style: styles.image,\n              source: {\n                uri: val.info.imagem\n              },\n              children: _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return navigation.navigate('Noticia', {\n                    titulo: val.info.titulo,\n                    conteudo: val.info.conteudo,\n                    imagem: val.info.imagem\n                  });\n                },\n                style: {\n                  width: '100%',\n                  height: '100%',\n                  backgroundColor: 'rgba(0,0,0,0.4)',\n                  justifyContent: 'flex-end'\n                },\n                children: _jsx(Text, {\n                  style: {\n                    fontSize: 24,\n                    color: 'white'\n                  },\n                  children: val.info.titulo\n                })\n              })\n            });\n          }\n        })\n      })\n    }), _jsxs(View, {\n      style: {\n        flex: 0.7,\n        padding: 20\n      },\n      children: [_jsx(View, {\n        style: {\n          width: 50,\n          height: 2,\n          backgroundColor: '#069',\n          position: 'absolute',\n          top: 40,\n          left: 40\n        }\n      }), _jsx(Text, {\n        children: \"Mais Noticias\"\n      }), _jsx(ScrollView, {\n        contentContainerStyle: {\n          padding: 20\n        },\n        style: {\n          flex: 1\n        },\n        children: noticias.map(function (val, index) {\n          if (index >= 2) {\n            return _jsx(View, {\n              style: {\n                flexDirection: 'row',\n                marginBottom: 10\n              },\n              children: _jsxs(TouchableOpacity, {\n                style: {\n                  flexDirection: 'row'\n                },\n                onPress: function onPress() {\n                  return navigation.navigate('Noticia', {\n                    titulo: val.info.titulo,\n                    conteudo: val.info.conteudo,\n                    imagem: val.info.imagem\n                  });\n                },\n                children: [_jsx(Image, {\n                  source: {\n                    uri: val.info.imagem\n                  },\n                  style: {\n                    width: 100,\n                    height: 100\n                  }\n                }), _jsx(Text, {\n                  style: {\n                    padding: 10\n                  },\n                  children: val.info.titulo\n                })]\n              })\n            });\n          }\n        })\n      })]\n    })]\n  });\n}\n\nfunction NoticiaScreen(_ref2) {\n  var route = _ref2.route,\n      navigation = _ref2.navigation;\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(ScrollView, {\n      style: {\n        flex: 1\n      },\n      children: [_jsx(Image, {\n        style: styles.imageConteudo,\n        source: {\n          uri: route.params.imagem\n        },\n        children: _jsx(View, {\n          style: {\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'rgba(0,0,0,0.4)',\n            justifyContent: 'flex-end',\n            padding: 10\n          },\n          children: _jsx(Text, {\n            style: {\n              fontSize: 24,\n              color: 'white'\n            },\n            children: route.params.titulo\n          })\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 18,\n            padding: 20\n          },\n          children: route.params.conteudo\n        })\n      })]\n    })\n  });\n}\n\nvar Stack = createNativeStackNavigator();\n\nfunction App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Portal\",\n        component: PortalScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Noticia\",\n        component: NoticiaScreen\n      })]\n    })\n  });\n}\n\nexport default App;\nvar styles = StyleSheet.create({\n  image: {\n    resizeMode: 'cover',\n    justifyContent: 'flex-end',\n    width: '100%',\n    flex: 1\n  },\n  imageConteudo: {\n    resizeMode: 'cover',\n    width: '100%',\n    flex: 0.5,\n    height: 200\n  }\n});","map":{"version":3,"sources":["C:/Users/gabri/p/app-noticias/App.js"],"names":["React","useEffect","useState","NavigationContainer","createNativeStackNavigator","db","firebase","PortalScreen","navigation","noticias","setNoticias","collection","orderBy","onSnapshot","snapshot","docs","map","doc","info","data","flex","width","height","backgroundColor","val","index","styles","image","uri","imagem","navigate","titulo","conteudo","justifyContent","fontSize","color","padding","position","top","left","flexDirection","marginBottom","NoticiaScreen","route","imageConteudo","params","Stack","App","StyleSheet","create","resizeMode"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react';\nimport { View, Text, StyleSheet, ScrollView, ImageBackground, Image, TouchableOpacity } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport {db} from './firebase.js';\nimport firebase from 'firebase/compat/app';\nimport \"firebase/compat/firestore\";\n\nfunction PortalScreen({navigation}) {\n\n  const [noticias, setNoticias] = useState([]);\n\n  useEffect(()=>{\n    db.collection('noticias').orderBy('data', 'desc').onSnapshot(snapshot=>{\n      setNoticias(snapshot.docs.map(function(doc){\n        return {info:doc.data()}\n      }));\n    })\n  }, [])\n\n  return (\n    <View style={{ flex: 1, }}>\n\n      <View style={{ flex: 0.3, }}>\n        <ScrollView style={{flex:1}} contentContainerStyle={{width:'200%', height:'100%', backgroundColor:'red'}} horizontal>\n\n          {\n            noticias.map((val,index)=>{\n              if(index < 2){\n                return (\n                  <ImageBackground style={styles.image} source={{ uri: val.info.imagem }}>\n                    <TouchableOpacity onPress={()=>navigation.navigate('Noticia', \n                      {\n                      titulo: val.info.titulo, \n                      conteudo: val.info.conteudo,\n                      imagem: val.info.imagem\n                      }\n                    )} style = {{\n                      width:'100%', \n                      height:'100%', \n                      backgroundColor:'rgba(0,0,0,0.4)', \n                      justifyContent:'flex-end'\n                    }}>\n                      <Text style={{fontSize: 24, color:'white'}}>{val.info.titulo}</Text>\n                    </TouchableOpacity>\n                  </ImageBackground>\n                )\n              }\n            })\n          }\n\n        </ScrollView>\n      </View>\n\n      <View style={{flex:0.7, padding:20}}>\n\n        <View style={{\n          width:50, \n          height:2, \n          backgroundColor:'#069', \n          position:'absolute', \n          top:40, \n          left:40\n        }}></View>\n        <Text>Mais Noticias</Text>\n\n        <ScrollView contentContainerStyle={{padding:20}} style={{flex:1}}>\n          \n        {\n          noticias.map((val,index)=>{\n            if(index >= 2){\n              return (\n                <View style={{flexDirection:'row',marginBottom:10}}>\n                  <TouchableOpacity style={{flexDirection:'row'}} onPress={()=>navigation.navigate('Noticia',{\n                    titulo: val.info.titulo,\n                    conteudo: val.info.conteudo,\n                    imagem: val.info.imagem\n                  })}>\n                    <Image source={{ uri: val.info.imagem}} style={{width:100,height:100}} />\n                    <Text style={{padding:10}}>{val.info.titulo}</Text>\n                  </TouchableOpacity>\n                </View>\n              )\n            }\n          })\n        }  \n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nfunction NoticiaScreen({route, navigation}) {\n  return (\n    <View style={{ flex: 1}}>\n      <ScrollView style={{flex:1}}>\n        <Image style={styles.imageConteudo} source={{ uri: route.params.imagem }}>\n          <View style={{\n            width:'100%', \n            height:'100%', \n            backgroundColor:'rgba(0,0,0,0.4)', \n            justifyContent:'flex-end', \n            padding:10,\n          }}>\n            <Text style={{fontSize: 24, color:'white'}}>{route.params.titulo}</Text>\n          </View>\n        </Image>\n        <View style={{flex:1}}>\n          <Text style={{fontSize:18, padding:20}}>{route.params.conteudo}</Text>\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst Stack = createNativeStackNavigator();\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Portal\" component={PortalScreen} />\n        <Stack.Screen name=\"Noticia\" component={NoticiaScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  image: {\n    resizeMode: 'cover',\n    justifyContent:'flex-end',\n    width:'100%',\n    flex:1\n  },\n  imageConteudo: {\n    resizeMode: 'cover',\n    width:'100%',\n    flex:0.5,\n    height:200\n  }\n});\n"]},"metadata":{},"sourceType":"module"}